{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const UserDashboard = ({ user_Data }) => {\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchUserById = async () => {\n//     if (user_Data) {\n//       try {\n//         const response = await fetch(`/user/${user_Data.id}`, {\n//           method: 'GET',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         });\n\n//         if (response.ok) {\n//           const data = await response.json();\n//           console.log('User data:', data.user);\n//           // Further processing with 'data'\n//         } else {\n//           const errorMessage = await response.text(); // Get detailed error message from the server\n//           console.error('Error fetching user data:', errorMessage);\n//           setError(`Error fetching user data: ${errorMessage}`);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching user:', error);\n//         setError('Something went wrong. Please try again.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUserById();\n//   }, [user_Data]);\n\n//   return (\n//     <div>\n//       <h1>User Dashboard</h1>\n//       {loading && <p>Fetching user data...</p>}\n//       {error && <p>{error}</p>}\n//       {user_Data && (\n//         <div>\n//           <h2>User Information</h2>\n//           <p>ID: {user_Data.id}</p>\n//           <p>First Name: {user_Data.first_name}</p>\n//           <p>Last Name: {user_Data.last_name}</p>\n//           <p>Username: {user_Data.username}</p>\n//           <p>Email: {user_Data.email}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;","map":{"version":3,"names":[],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const UserDashboard = ({ user_Data }) => {\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchUserById = async () => {\n//     if (user_Data) {\n//       try {\n//         const response = await fetch(`/user/${user_Data.id}`, {\n//           method: 'GET',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         });\n\n//         if (response.ok) {\n//           const data = await response.json();\n//           console.log('User data:', data.user);\n//           // Further processing with 'data'\n//         } else {\n//           const errorMessage = await response.text(); // Get detailed error message from the server\n//           console.error('Error fetching user data:', errorMessage);\n//           setError(`Error fetching user data: ${errorMessage}`);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching user:', error);\n//         setError('Something went wrong. Please try again.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUserById();\n//   }, [user_Data]);\n\n//   return (\n//     <div>\n//       <h1>User Dashboard</h1>\n//       {loading && <p>Fetching user data...</p>}\n//       {error && <p>{error}</p>}\n//       {user_Data && (\n//         <div>\n//           <h2>User Information</h2>\n//           <p>ID: {user_Data.id}</p>\n//           <p>First Name: {user_Data.first_name}</p>\n//           <p>Last Name: {user_Data.last_name}</p>\n//           <p>Username: {user_Data.username}</p>\n//           <p>Email: {user_Data.email}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}