{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/login.js\",\n  _s = $RefreshSig$();\n// Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserDashboard from './UserDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERROR_MESSAGES = {\n  GENERIC: 'Error fetching user data.',\n  SERVER_ERROR: 'Internal Server Error. Please try again later.'\n};\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userData, setUserData] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Login successful:', data);\n        if (!data.user || !data.user.id) {\n          // Ensure userId is available\n          setErrorMessage('User ID not found in the response.');\n          return;\n        }\n\n        // Fetch user data after successful login\n        const userResponse = await fetch(`user/${data.user.id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          console.log('User data:', userData);\n\n          // Update the user data state\n          setUserData(userData);\n\n          // Navigate to the user dashboard\n          navigate(`/dashboard`);\n        } else {\n          console.error('Error fetching user data:', userResponse.statusText);\n\n          // Handle specific errors or provide a generic message\n          if (userResponse.status === 500) {\n            setErrorMessage(ERROR_MESSAGES.SERVER_ERROR);\n          } else {\n            setErrorMessage(ERROR_MESSAGES.GENERIC);\n          }\n        }\n      } else {\n        console.error('Login failed:', data.message);\n        setErrorMessage(data.message || 'Login failed.');\n        setUserData(null); // Clear user data on login failure\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(UserDashboard, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"28Pxvjwd/e+2pUwZdICAW0B6HZg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","UserDashboard","jsxDEV","_jsxDEV","ERROR_MESSAGES","GENERIC","SERVER_ERROR","Login","_s","navigate","formData","setFormData","username","password","loading","setLoading","errorMessage","setErrorMessage","userData","setUserData","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","user","id","userResponse","error","statusText","status","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","style","color","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/login.js"],"sourcesContent":["// Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserDashboard from './UserDashboard';\n\nconst ERROR_MESSAGES = {\n  GENERIC: 'Error fetching user data.',\n  SERVER_ERROR: 'Internal Server Error. Please try again later.',\n};\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userData, setUserData] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log('Login successful:', data);\n\n        if (!data.user || !data.user.id) {\n          // Ensure userId is available\n          setErrorMessage('User ID not found in the response.');\n          return;\n        }\n\n        // Fetch user data after successful login\n        const userResponse = await fetch(`user/${data.user.id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          console.log('User data:', userData);\n\n          // Update the user data state\n          setUserData(userData);\n\n          // Navigate to the user dashboard\n          navigate(`/dashboard`);\n        } else {\n          console.error('Error fetching user data:', userResponse.statusText);\n\n          // Handle specific errors or provide a generic message\n          if (userResponse.status === 500) {\n            setErrorMessage(ERROR_MESSAGES.SERVER_ERROR);\n          } else {\n            setErrorMessage(ERROR_MESSAGES.GENERIC);\n          }\n        }\n      } else {\n        console.error('Login failed:', data.message);\n        setErrorMessage(data.message || 'Login failed.');\n        setUserData(null); // Clear user data on login failure\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n      </form>\n\n      {userData && <UserDashboard userData={userData} />}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}