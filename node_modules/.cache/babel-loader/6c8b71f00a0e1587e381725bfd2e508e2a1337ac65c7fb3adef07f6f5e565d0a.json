{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/EditAccountNameForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditAccountNameForm = ({\n  user_id,\n  account_id,\n  currentName,\n  onEdit\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [newAccountName, setNewAccountName] = useState(currentName);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/user/${user_id}/accounts/${account_id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          new_account_name: newAccountName\n        })\n      });\n      if (response.ok) {\n        console.log('Account name updated successfully!');\n        // Trigger a callback to update the UI with the new account name\n        onEdit(newAccountName);\n        // Close the form or modal if needed\n        // Example: navigate('/dashboard');\n      } else {\n        console.error('Failed to update account name.');\n      }\n    } catch (error) {\n      console.error('Error during account name update:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"New Account Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newAccountName,\n      onChange: e => setNewAccountName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Account Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(EditAccountNameForm, \"GtWDX9UKv+LXNQRId+39AUzrUCI=\", false, function () {\n  return [useNavigate];\n});\n_c = EditAccountNameForm;\nexport default EditAccountNameForm;\nvar _c;\n$RefreshReg$(_c, \"EditAccountNameForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EditAccountNameForm","user_id","account_id","currentName","onEdit","_s","navigate","newAccountName","setNewAccountName","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","new_account_name","ok","console","log","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/EditAccountNameForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst EditAccountNameForm = ({ user_id, account_id, currentName, onEdit }) => {\n    const navigate = useNavigate();\n    const [newAccountName, setNewAccountName] = useState(currentName);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch(`/user/${user_id}/accounts/${account_id}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ new_account_name: newAccountName }),\n            });\n\n            if (response.ok) {\n                console.log('Account name updated successfully!');\n                // Trigger a callback to update the UI with the new account name\n                onEdit(newAccountName);\n                // Close the form or modal if needed\n                // Example: navigate('/dashboard');\n            } else {\n                console.error('Failed to update account name.');\n            }\n        } catch (error) {\n            console.error('Error during account name update:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>New Account Name:</label>\n            <input\n                type=\"text\"\n                value={newAccountName}\n                onChange={(e) => setNewAccountName(e.target.value)}\n                required\n            />\n            <button type=\"submit\">Update Account Name</button>\n        </form>\n    );\n};\n\nexport default EditAccountNameForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAACO,WAAW,CAAC;EAEjE,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAQZ,OAAQ,aAAYC,UAAW,EAAC,EAAE;QACpEY,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,gBAAgB,EAAEZ;QAAe,CAAC;MAC7D,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACQ,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjD;QACAlB,MAAM,CAACG,cAAc,CAAC;QACtB;QACA;MACJ,CAAC,MAAM;QACHc,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAMyB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACzB1B,OAAA;MAAA0B,QAAA,EAAO;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChC9B,OAAA;MACI+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,cAAe;MACtByB,QAAQ,EAAGtB,CAAC,IAAKF,iBAAiB,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MACnDG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACF9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEf,CAAC;AAACxB,EAAA,CA1CIL,mBAAmB;EAAA,QACJH,WAAW;AAAA;AAAAsC,EAAA,GAD1BnC,mBAAmB;AA4CzB,eAAeA,mBAAmB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}