{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserAccountsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport TransactionForm from './TransactionForm';\nimport EditAccountNameForm from './EditAccountNameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserAccountsPage = ({\n  userId\n}) => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    const fetchUserAccounts = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch user accounts data from the backend\n        const response = await fetch(`/user/${userId}/accounts`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const accountsData = await response.json();\n          console.log('User accounts data:', accountsData);\n\n          // Update the accounts state\n          setAccounts(accountsData.accounts);\n        } else {\n          console.error('Error fetching user accounts. Status:', response.status);\n          const errorMessage = await response.text();\n          console.error('Error message:', errorMessage);\n          setError(`Error fetching user accounts: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error('Error fetching user accounts:', error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserAccounts();\n  }, [userId]);\n\n  // Function to handle the edit of an account name\n  const handleEditAccountName = (accountId, newAccountName) => {\n    // Update the accounts state with the new account name\n    setAccounts(prevAccounts => prevAccounts.map(account => account.id === accountId ? {\n      ...account,\n      account_name: newAccountName\n    } : account));\n\n    // Set success message\n    setSuccessMessage(`Account name updated successfully for account ${accountId}`);\n\n    // Clear success message after a few seconds\n    setTimeout(() => {\n      setSuccessMessage(null);\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/${userId}/create-account`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create a New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user accounts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accounts List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account Name: \", account.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created Date: \", account.created_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditAccountNameForm, {\n          user_id: userId,\n          account_id: account.id,\n          currentName: account.account_name,\n          onEdit: handleEditAccountName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n          userId: userId,\n          accountId: account.id,\n          onTransactionAdded: () => {\n            // Set success message for transaction\n            setSuccessMessage(`Transaction added successfully for account ${account.id}`);\n\n            // Clear success message after a few seconds\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 3000);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), account.transactions && account.transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transactions List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), account.transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Amount: \", transaction.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", transaction.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", transaction.transaction_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(UserAccountsPage, \"KVXzWeJyq6j6WYaqz+wE2cyVhWo=\");\n_c = UserAccountsPage;\nexport default UserAccountsPage;\nvar _c;\n$RefreshReg$(_c, \"UserAccountsPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","TransactionForm","EditAccountNameForm","jsxDEV","_jsxDEV","UserAccountsPage","userId","_s","accounts","setAccounts","loading","setLoading","error","setError","successMessage","setSuccessMessage","fetchUserAccounts","response","fetch","method","headers","ok","accountsData","json","console","log","status","errorMessage","text","handleEditAccountName","accountId","newAccountName","prevAccounts","map","account","id","account_name","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","color","length","name","balance","created_date","user_id","account_id","currentName","onEdit","onTransactionAdded","transactions","transaction","amount","description","transaction_date","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserAccountsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport TransactionForm from './TransactionForm';\nimport EditAccountNameForm from './EditAccountNameForm';\n\nconst UserAccountsPage = ({ userId }) => {\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    const fetchUserAccounts = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch user accounts data from the backend\n        const response = await fetch(`/user/${userId}/accounts`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const accountsData = await response.json();\n          console.log('User accounts data:', accountsData);\n\n          // Update the accounts state\n          setAccounts(accountsData.accounts);\n        } else {\n          console.error('Error fetching user accounts. Status:', response.status);\n          const errorMessage = await response.text();\n          console.error('Error message:', errorMessage);\n          setError(`Error fetching user accounts: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error('Error fetching user accounts:', error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserAccounts();\n  }, [userId]);\n\n  // Function to handle the edit of an account name\n  const handleEditAccountName = (accountId, newAccountName) => {\n    // Update the accounts state with the new account name\n    setAccounts((prevAccounts) =>\n      prevAccounts.map((account) =>\n        account.id === accountId ? { ...account, account_name: newAccountName } : account\n      )\n    );\n\n    // Set success message\n    setSuccessMessage(`Account name updated successfully for account ${accountId}`);\n\n    // Clear success message after a few seconds\n    setTimeout(() => {\n      setSuccessMessage(null);\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <h1>User Accounts</h1>\n      <Link to={`/user/${userId}/create-account`}>\n        <button>Create a New Account</button>\n      </Link>\n      {loading && <p>Loading user accounts...</p>}\n      {error && <p>{error}</p>}\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n      {accounts.length > 0 && (\n        <div>\n          <h2>Accounts List</h2>\n          {accounts.map((account) => (\n            <div key={account.id}>\n              <p>Account Name: {account.name}</p>\n              <p>Balance: {account.balance}</p>\n              <p>Created Date: {account.created_date}</p>\n              <EditAccountNameForm\n                user_id={userId}\n                account_id={account.id}\n                currentName={account.account_name}\n                onEdit={handleEditAccountName}\n              />\n              {/* Render the EditAccountNameForm for each account */}\n              <TransactionForm\n                userId={userId}\n                accountId={account.id}\n                onTransactionAdded={() => {\n                  // Set success message for transaction\n                  setSuccessMessage(`Transaction added successfully for account ${account.id}`);\n\n                  // Clear success message after a few seconds\n                  setTimeout(() => {\n                    setSuccessMessage(null);\n                  }, 3000);\n                }}\n              />\n              {/* Display all transactions for the account */}\n              {account.transactions && account.transactions.length > 0 && (\n                <div>\n                  <h3>Transactions List</h3>\n                  {account.transactions.map((transaction) => (\n                    <div key={transaction.id}>\n                      <p>Amount: {transaction.amount}</p>\n                      <p>Description: {transaction.description}</p>\n                      <p>Date: {transaction.transaction_date}</p>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserAccountsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}