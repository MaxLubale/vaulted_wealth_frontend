{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js\",\n  _s = $RefreshSig$();\n// TransactionForm.js\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare transaction data\n    const transactionData = {\n      amount: amount,\n      description: description,\n      user_id: 1 // Replace with the actual user ID\n      // Add other fields as needed\n    };\n    try {\n      // Send transaction data to the Flask backend\n      const response = await fetch('/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transactionData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Transaction added successfully:', data);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"amount\",\n      children: \"Amount:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"amount\",\n      name: \"amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"24o9peQPIdP9Sy7yLwUlLpS5LUs=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionForm","_s","amount","setAmount","description","setDescription","handleSubmit","e","preventDefault","transactionData","user_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js"],"sourcesContent":["// TransactionForm.js\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst TransactionForm = () => {\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare transaction data\n    const transactionData = {\n      amount: amount,\n      description: description,\n      user_id: 1 // Replace with the actual user ID\n      // Add other fields as needed\n    };\n\n    try {\n      // Send transaction data to the Flask backend\n      const response = await fetch('/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transactionData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      console.log('Transaction added successfully:', data);\n\n     \n\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n     \n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"amount\">Amount:</label>\n      <input\n        type=\"number\"\n        id=\"amount\"\n        name=\"amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        required\n      />\n\n      <label htmlFor=\"description\">Description:</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n\n      {/* Add other form fields as needed */}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default TransactionForm;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,eAAe,GAAG;MACtBP,MAAM,EAAEA,MAAM;MACdE,WAAW,EAAEA,WAAW;MACxBM,OAAO,EAAE,CAAC,CAAC;MACX;IACF,CAAC;IAED,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,eAAe;MACtC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,IAAI,CAAC;IAItD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IAEnD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBAC3B3B,OAAA;MAAO4B,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvChC,OAAA;MACEiC,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,QAAQ;MACXC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEjC,MAAO;MACdkC,QAAQ,EAAG7B,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;MAC3CG,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFhC,OAAA;MAAO4B,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDhC,OAAA;MACEiC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBC,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAE/B,WAAY;MACnBgC,QAAQ,EAAG7B,CAAC,IAAKF,cAAc,CAACE,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAIFhC,OAAA;MAAQiC,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAnEID,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAqErB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}