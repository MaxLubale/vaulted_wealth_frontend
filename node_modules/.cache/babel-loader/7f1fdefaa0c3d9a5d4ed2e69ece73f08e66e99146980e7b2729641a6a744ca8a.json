{"ast":null,"code":"// // TransactionForm.js\n\n// import React, { useState } from 'react';\n\n// const TransactionForm = () => {\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Prepare transaction data\n//     const transactionData = {\n//       amount: amount,\n//       description: description,\n//       user_id: 1 // Replace with the actual user ID\n//       // Add other fields as needed\n//     };\n\n//     try {\n//       // Send transaction data to the Flask backend\n//       const response = await fetch('/transactions', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(transactionData)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const data = await response.json();\n//       console.log('Transaction added successfully:', data);\n\n//     } catch (error) {\n//       console.error('Error adding transaction:', error);\n\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"amount\">Amount:</label>\n//       <input\n//         type=\"number\"\n//         id=\"amount\"\n//         name=\"amount\"\n//         value={amount}\n//         onChange={(e) => setAmount(e.target.value)}\n//         required\n//       />\n\n//       <label htmlFor=\"description\">Description:</label>\n//       <input\n//         type=\"text\"\n//         id=\"description\"\n//         name=\"description\"\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         required\n//       />\n\n//       {/* Add other form fields as needed */}\n\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default TransactionForm;","map":{"version":3,"names":[],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js"],"sourcesContent":["// // TransactionForm.js\n\n// import React, { useState } from 'react';\n\n\n// const TransactionForm = () => {\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Prepare transaction data\n//     const transactionData = {\n//       amount: amount,\n//       description: description,\n//       user_id: 1 // Replace with the actual user ID\n//       // Add other fields as needed\n//     };\n\n//     try {\n//       // Send transaction data to the Flask backend\n//       const response = await fetch('/transactions', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(transactionData)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const data = await response.json();\n//       console.log('Transaction added successfully:', data);\n\n     \n\n//     } catch (error) {\n//       console.error('Error adding transaction:', error);\n     \n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"amount\">Amount:</label>\n//       <input\n//         type=\"number\"\n//         id=\"amount\"\n//         name=\"amount\"\n//         value={amount}\n//         onChange={(e) => setAmount(e.target.value)}\n//         required\n//       />\n\n//       <label htmlFor=\"description\">Description:</label>\n//       <input\n//         type=\"text\"\n//         id=\"description\"\n//         name=\"description\"\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         required\n//       />\n\n//       {/* Add other form fields as needed */}\n\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default TransactionForm;"],"mappings":"AAAA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}