{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/vaulted_wealth_frontend/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userData, setUserData] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLoginSuccess = async userId => {\n    try {\n      const userResponse = await fetch(`/user/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (userResponse.ok) {\n        const userData = await userResponse.json();\n        console.log('User data:', userData);\n\n        // Update the user data state and navigate to the user dashboard\n        setUserData(userData.user);\n        navigate(`/dashboard/${userId}`);\n      } else {\n        console.error('Error fetching user data:', userResponse.statusText);\n        if (userResponse.status === 500) {\n          setErrorMessage('Internal Server Error. Please try again later.');\n        } else {\n          setErrorMessage('Error fetching user data.');\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Login successful:', data);\n        if (!data.user || !data.user.id) {\n          setErrorMessage('User ID not found in the response.');\n          return;\n        }\n\n        // Fetch user data after successful login\n        handleLoginSuccess(data.user.id);\n      } else {\n        console.error('Login failed:', data.message);\n        setErrorMessage(data.message || 'Login failed.');\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered-input\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered-input\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"28Pxvjwd/e+2pUwZdICAW0B6HZg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","navigate","formData","setFormData","username","password","loading","setLoading","errorMessage","setErrorMessage","userData","setUserData","handleChange","e","target","name","value","handleLoginSuccess","userId","userResponse","fetch","method","headers","ok","json","console","log","user","error","statusText","status","handleSubmit","preventDefault","response","body","JSON","stringify","data","id","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","style","color","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/vaulted_wealth_frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css'; \n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userData, setUserData] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleLoginSuccess = async (userId) => {\n    try {\n      const userResponse = await fetch(`/user/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (userResponse.ok) {\n        const userData = await userResponse.json();\n        console.log('User data:', userData);\n\n        // Update the user data state and navigate to the user dashboard\n        setUserData(userData.user);\n        navigate(`/dashboard/${userId}`);\n      } else {\n        console.error('Error fetching user data:', userResponse.statusText);\n\n        if (userResponse.status === 500) {\n          setErrorMessage('Internal Server Error. Please try again later.');\n        } else {\n          setErrorMessage('Error fetching user data.');\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log('Login successful:', data);\n\n        if (!data.user || !data.user.id) {\n          setErrorMessage('User ID not found in the response.');\n          return;\n        }\n\n        // Fetch user data after successful login\n        handleLoginSuccess(data.user.id);\n      } else {\n        console.error('Login failed:', data.message);\n        setErrorMessage(data.message || 'Login failed.');\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-form-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Add your existing form fields here */}\n        <div className=\"centered-input\">\n          <label>\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"centered-input\">\n          <label>\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"centered-input\">\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Logging in...' : 'Login'}\n          </button>\n        </div>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}