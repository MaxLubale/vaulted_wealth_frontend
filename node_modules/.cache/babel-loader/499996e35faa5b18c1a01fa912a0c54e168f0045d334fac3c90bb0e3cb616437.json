{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/UserDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await fetch('/users');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user list. Status: ${response.status}`);\n        }\n        const responseData = await response.json();\n        console.log('Response Data:', responseData);\n        if (!responseData.users || !Array.isArray(responseData.users)) {\n          console.error('Invalid response structure. Expected an array of users. Response:', responseData);\n          throw new Error('Invalid response structure. Expected an array of users.');\n        }\n        const usersData = responseData.users;\n        console.log('userId:', userId);\n        console.log('usersData:', usersData);\n\n        // Remove non-numeric characters from userId\n        const cleanedUserId = userId.replace(/\\D/g, '');\n\n        // Check if cleanedUserId is empty\n        if (!cleanedUserId) {\n          console.error('Cleaned UserID is empty.');\n          setError('User not found. Please check the user ID and try again.');\n          return;\n        }\n\n        // Find the logged-in user based on ID\n        const foundUser = usersData.find(user => user.id === parseInt(cleanedUserId, 10));\n        if (!foundUser) {\n          console.error('User not found. Response:', usersData);\n          console.error('Cleaned UserID:', cleanedUserId);\n          setError('User not found. Please check the user ID and try again.');\n          return;\n        }\n        setLoggedInUser(foundUser);\n      } catch (error) {\n        console.error('Error fetching user data:', error.message);\n        setError(`Failed to fetch user data. ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllUsers();\n  }, [userId]);\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"User ID is missing. Please provide a valid user ID.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", loggedInUser.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Name: \", loggedInUser.first_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Name: \", loggedInUser.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", loggedInUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", loggedInUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"kKnolPpFvcS58XyGN5kWnBhGrBU=\", false, function () {\n  return [useParams];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","UserDashboard","_s","userId","loggedInUser","setLoggedInUser","loading","setLoading","error","setError","fetchAllUsers","response","fetch","ok","Error","status","responseData","json","console","log","users","Array","isArray","usersData","cleanedUserId","replace","foundUser","find","user","id","parseInt","message","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","first_name","last_name","username","email","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserDashboard.js"],"sourcesContent":["// src/components/UserDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst UserDashboard = () => {\n  const { userId } = useParams();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await fetch('/users');\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user list. Status: ${response.status}`);\n        }\n\n        const responseData = await response.json();\n        console.log('Response Data:', responseData);\n\n        if (!responseData.users || !Array.isArray(responseData.users)) {\n          console.error('Invalid response structure. Expected an array of users. Response:', responseData);\n          throw new Error('Invalid response structure. Expected an array of users.');\n        }\n\n        const usersData = responseData.users;\n        console.log('userId:', userId);\n        console.log('usersData:', usersData);\n\n        // Remove non-numeric characters from userId\n        const cleanedUserId = userId.replace(/\\D/g, '');\n\n        // Check if cleanedUserId is empty\n        if (!cleanedUserId) {\n          console.error('Cleaned UserID is empty.');\n          setError('User not found. Please check the user ID and try again.');\n          return;\n        }\n\n        // Find the logged-in user based on ID\n        const foundUser = usersData.find(user => user.id === parseInt(cleanedUserId, 10));\n\n        if (!foundUser) {\n          console.error('User not found. Response:', usersData);\n          console.error('Cleaned UserID:', cleanedUserId);\n          setError('User not found. Please check the user ID and try again.');\n          return;\n        }\n\n        setLoggedInUser(foundUser);\n      } catch (error) {\n        console.error('Error fetching user data:', error.message);\n        setError(`Failed to fetch user data. ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllUsers();\n  }, [userId]);\n\n  if (!userId) {\n    return <p style={{ color: 'red' }}>User ID is missing. Please provide a valid user ID.</p>;\n  }\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p style={{ color: 'red' }}>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n\n      {/* Display user details */}\n      <div>\n        <h3>User Details</h3>\n        <p>ID: {loggedInUser.id}</p>\n        <p>First Name: {loggedInUser.first_name}</p>\n        <p>Last Name: {loggedInUser.last_name}</p>\n        <p>Username: {loggedInUser.username}</p>\n        <p>Email: {loggedInUser.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}