{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js\",\n  _s = $RefreshSig$();\n// TransactionsPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsPage = ({\n  userId,\n  accountId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTransactionAmount, setNewTransactionAmount] = useState('');\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch transactions data from the backend for the specific account\n        const response = await fetch(`/user/${userId}/accounts/${accountId}/transactions`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const transactionsData = await response.json();\n          console.log('Transactions data:', transactionsData);\n\n          // Update the transactions state\n          setTransactions(transactionsData.transactions);\n        } else {\n          console.error('Error fetching transactions. Status:', response.status);\n          const errorMessage = await response.text();\n          console.error('Error message:', errorMessage);\n          setError(`Error fetching transactions: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [userId, accountId]);\n  const handleAddTransaction = async e => {\n    e.preventDefault();\n    try {\n      // Add a new transaction to the backend\n      const response = await fetch(`/user/${userId}/accounts/${accountId}/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: parseFloat(newTransactionAmount)\n        })\n      });\n      if (response.ok) {\n        console.log('Transaction added successfully!');\n        // Refresh the transactions after adding a new one\n        fetchTransactions();\n        // Clear the newTransactionAmount state\n        setNewTransactionAmount('');\n      } else {\n        console.error('Failed to add transaction. Status:', response.status);\n        const errorMessage = await response.text();\n        console.error('Error message:', errorMessage);\n        setError(`Error adding transaction: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      setError('Something went wrong. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transaction Amount: \", transaction.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transaction Date: \", transaction.transaction_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: newTransactionAmount,\n          onChange: e => setNewTransactionAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsPage, \"ESDP7I86OJYJRdFsqm6U5pmPWv4=\");\n_c = TransactionsPage;\nexport default TransactionsPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsPage","userId","accountId","_s","transactions","setTransactions","loading","setLoading","error","setError","newTransactionAmount","setNewTransactionAmount","fetchTransactions","response","fetch","method","headers","ok","transactionsData","json","console","log","status","errorMessage","text","handleAddTransaction","e","preventDefault","body","JSON","stringify","amount","parseFloat","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","transaction","transaction_date","id","onSubmit","type","step","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js"],"sourcesContent":["// TransactionsPage.js\n\nimport React, { useState, useEffect } from 'react';\n\nconst TransactionsPage = ({ userId, accountId }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTransactionAmount, setNewTransactionAmount] = useState('');\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch transactions data from the backend for the specific account\n        const response = await fetch(`/user/${userId}/accounts/${accountId}/transactions`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const transactionsData = await response.json();\n          console.log('Transactions data:', transactionsData);\n\n          // Update the transactions state\n          setTransactions(transactionsData.transactions);\n        } else {\n          console.error('Error fetching transactions. Status:', response.status);\n          const errorMessage = await response.text();\n          console.error('Error message:', errorMessage);\n          setError(`Error fetching transactions: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTransactions();\n  }, [userId, accountId]);\n\n  const handleAddTransaction = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Add a new transaction to the backend\n      const response = await fetch(`/user/${userId}/accounts/${accountId}/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount: parseFloat(newTransactionAmount) }),\n      });\n\n      if (response.ok) {\n        console.log('Transaction added successfully!');\n        // Refresh the transactions after adding a new one\n        fetchTransactions();\n        // Clear the newTransactionAmount state\n        setNewTransactionAmount('');\n      } else {\n        console.error('Failed to add transaction. Status:', response.status);\n        const errorMessage = await response.text();\n        console.error('Error message:', errorMessage);\n        setError(`Error adding transaction: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      setError('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Transactions</h1>\n      {loading && <p>Loading transactions...</p>}\n      {error && <p>{error}</p>}\n      {transactions.length > 0 && (\n        <ul>\n          {transactions.map((transaction) => (\n            <li key={transaction.id}>\n              <p>Transaction Amount: {transaction.amount}</p>\n              <p>Transaction Date: {transaction.transaction_date}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      <h2>Add Transaction</h2>\n      <form onSubmit={handleAddTransaction}>\n        <label>\n          Amount:\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={newTransactionAmount}\n            onChange={(e) => setNewTransactionAmount(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TransactionsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}