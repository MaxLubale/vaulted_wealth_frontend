{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import UserAccountsPage from'./UserAccountsPage';import'./UserDashboard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserDashboard=()=>{const{userId}=useParams();const navigate=useNavigate();const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[userData,setUserData]=useState(null);useEffect(()=>{const fetchUserData=async()=>{try{setLoading(true);const response=await fetch(\"/user/\".concat(userId),{method:'GET',headers:{'Content-Type':'application/json'}});if(response.ok){const userData=await response.json();setUserData(userData.user);}else{console.error('Error fetching user data. Status:',response.status);const errorMessage=await response.text();console.error('Error message:',errorMessage);setError(\"Error fetching user data: \".concat(errorMessage));}}catch(error){console.error('Error fetching user data:',error);setError('Something went wrong. Please try again.');}finally{setLoading(false);}};fetchUserData();},[userId]);// Handle logout function\nconst handleLogout=()=>{// Add logic to perform logout actions (clear tokens, etc.)\n// For now, let's just redirect to the login page\nnavigate('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\".container \",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Your Dashboard\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Fetching user data...\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),userData&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Information\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"First Name: \",userData.first_name]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Last Name: \",userData.last_name]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Username: \",userData.username]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Email: \",userData.email]}),/*#__PURE__*/_jsx(UserAccountsPage,{userId:userId})]})]});};export default UserDashboard;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","UserAccountsPage","jsx","_jsx","jsxs","_jsxs","UserDashboard","userId","navigate","loading","setLoading","error","setError","userData","setUserData","fetchUserData","response","fetch","concat","method","headers","ok","json","user","console","status","errorMessage","text","handleLogout","className","children","first_name","last_name","username","email"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport UserAccountsPage from './UserAccountsPage';\nimport'./UserDashboard.css'\n\nconst UserDashboard = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate(); \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        setLoading(true);\n\n        const response = await fetch(`/user/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const userData = await response.json();\n          setUserData(userData.user);\n        } else {\n          console.error('Error fetching user data. Status:', response.status);\n          const errorMessage = await response.text();\n          console.error('Error message:', errorMessage);\n          setError(`Error fetching user data: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [userId]);\n\n  // Handle logout function\n  const handleLogout = () => {\n    // Add logic to perform logout actions (clear tokens, etc.)\n    // For now, let's just redirect to the login page\n    navigate('/');\n  };\n\n  return (\n    <div className='.container '>\n      <h1>Your Dashboard</h1>\n      {loading && <p>Fetching user data...</p>}\n      {error && <p>{error}</p>}\n      {userData && (\n        <div className='user-info'>\n          <h2>User Information</h2>\n          \n          <h2>First Name: {userData.first_name}</h2>\n          <h2>Last Name: {userData.last_name}</h2>\n          <h2>Username: {userData.username}</h2>\n          <h3>Email: {userData.email}</h3>\n\n          {/* Route for the User Accounts Page */}\n          <UserAccountsPage userId={userId} />\n\n          \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}