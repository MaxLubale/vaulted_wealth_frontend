{"ast":null,"code":"var _jsxFileName = \"/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare transaction data\n    const transactionData = {\n      amount: amount,\n      description: description,\n      user_id: 1 // Replace with the actual user ID\n      // Add other fields as needed\n    };\n    try {\n      // Send transaction data to the Flask backend\n      const response = await fetch('/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transactionData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Transaction added successfully:', data);\n\n      // Refresh the transactions after adding a new one\n      fetchTransactions();\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      setError('Error adding transaction. Please try again.');\n    }\n  };\n  const fetchTransactions = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch transactions data from the backend\n      const response = await fetch('/transactions', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const transactionsData = await response.json();\n        console.log('Transactions data:', transactionsData);\n\n        // Update the transactions state\n        setTransactions(transactionsData.transactions);\n      } else {\n        console.error('Error fetching transactions. Status:', response.status);\n        const errorMessage = await response.text();\n        console.error('Error message:', errorMessage);\n        setError(`Error fetching transactions: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Fetch transactions when the component mounts\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"amount\",\n        name: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transactions History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading transactions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Amount: \", transaction.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", transaction.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"cJus2Sx32oyrr6saRPGTwA+cFT4=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionForm","_s","amount","setAmount","description","setDescription","transactions","setTransactions","loading","setLoading","error","setError","handleSubmit","e","preventDefault","transactionData","user_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","fetchTransactions","transactionsData","status","errorMessage","text","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","target","required","length","map","transaction","_c","$RefreshReg$"],"sources":["/home/max/personal-projects/Vaulted_Wealth/client/src/components/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TransactionForm = () => {\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare transaction data\n    const transactionData = {\n      amount: amount,\n      description: description,\n      user_id: 1 // Replace with the actual user ID\n      // Add other fields as needed\n    };\n\n    try {\n      // Send transaction data to the Flask backend\n      const response = await fetch('/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transactionData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      console.log('Transaction added successfully:', data);\n\n      // Refresh the transactions after adding a new one\n      fetchTransactions();\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      setError('Error adding transaction. Please try again.');\n    }\n  };\n\n  const fetchTransactions = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch transactions data from the backend\n      const response = await fetch('/transactions', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const transactionsData = await response.json();\n        console.log('Transactions data:', transactionsData);\n\n        // Update the transactions state\n        setTransactions(transactionsData.transactions);\n      } else {\n        console.error('Error fetching transactions. Status:', response.status);\n        const errorMessage = await response.text();\n        console.error('Error message:', errorMessage);\n        setError(`Error fetching transactions: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch transactions when the component mounts\n    fetchTransactions();\n  }, []);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Your transaction form fields */}\n        <label htmlFor=\"amount\">Amount:</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"description\">Description:</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n\n        {/* Add other form fields as needed */}\n\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      <div>\n        <h2>Transactions History</h2>\n        {loading && <p>Loading transactions...</p>}\n        {error && <p>{error}</p>}\n        {transactions.length > 0 && (\n          <ul>\n            {transactions.map((transaction) => (\n              <li key={transaction.id}>\n                <p>Amount: {transaction.amount}</p>\n                <p>Description: {transaction.description}</p>\n                {/* Add other transaction details */}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}